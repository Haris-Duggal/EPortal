@inject ExperienceService experienceService
@rendermode InteractiveServer

<EditForm Model="@experience" OnValidSubmit="@CreateExperience">
	<input type="text" class="form-control" placeholder="Title" @bind-value="experience.Title" />

	<select class=" form-control" @bind="experience.EmploymentType">
		<option value="EmploymentType">Employment Type</option>
		<option value="Full Time">Full Time</option>
		<option value="Part Time">Part Time</option>
		<option value="Internship">Internship</option>
		<option value="Contract">Contract</option>
		<option value="FreeLance">FreeLance</option>
	</select>
	<input type="text" class="form-control" placeholder="Company" @bind-value="experience.CompanyName" />
	<InputCheckbox  @bind-Value="experience.CurrentlyWorking"/>

	<input type="date" class="form-control" placeholder="mm/dd/yy" @bind="experience.StartDate"/>
	<input type="date"  class="form-control" placeholder="mm/dd/yy" @bind="experience.EndDate" /> 

	<input type="text" class="form-control" placeholder="Location" @bind-value="experience.Location" />
	<select class="form-control" @bind="experience.LocationType">
		<option value="LocationType">Location Type</option>
		<option value="Remote">Remote</option>
		<option value="Onsite">Onsite</option>
		<option value="Hybrid">Hybrid</option>
	</select>
	<textarea class="form-control" placeholder="Description" @bind="experience.Description"></textarea>
	<button class="btn btn-primary">Add</button>
</EditForm>

@code {

	private ExperienceModel experience = new ExperienceModel();
	[Parameter] public EventCallback ChangeState { get; set; }

	private async Task CreateExperience()
	{
		await experienceService.CreateExperience(experience);
		await ChangeState.InvokeAsync();
	}



}
