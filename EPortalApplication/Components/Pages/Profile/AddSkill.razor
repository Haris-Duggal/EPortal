@inject SkillsService skillService
@inject JsonService jsonService
@rendermode InteractiveServer

<EditForm Model="Skill" OnValidSubmit="CreateSkill">
	<div class="d-flex justify-content-between">
		<select id="degreeType" class="form-control" @onchange="SetSkillType">
			<option value="">Skill Type</option>
			<option value="Teaching">Teaching</option>
			<option value="Development">Development</option>
		</select>

		@if (SelectedSkillType == "Teaching")
		{
			<select id="Skill" class="form-control" @bind="Skill.SkillName">
				<option value="">Select Skill</option>
				@foreach (var skill in TeachingSkills!)
				{
					<option value="@skill">@skill</option>
				}
			</select>
		}
		else if (SelectedSkillType == "Development")
		{
			<select id="Skill" class="form-control" @bind="Skill.SkillName">
				<option value="">Select Skill</option>
				@foreach (var skill in DevelopmentSkills!)
				{
					<option value="@skill">@skill</option>
				}
			</select>
		}
		else
		{
			<select id="Skill" class="form-control">
				<option value="">Select Skill</option>
			</select>
		}
		<input type="text" class="form-control" id="EndDate" placeholder="Enter Time Duration in years" @bind-value=Skill.TimeDuration>

		<button type="submit" class="btn btn-primary">Add</button>
	</div>
</EditForm>

@code {
	private SkillModel Skill = new SkillModel();
	private string? SelectedSkillType { get; set; }
	private List<string>? TeachingSkills { get; set; }
	private List<string>? DevelopmentSkills { get; set; }
	[Parameter] public EventCallback ChangeState { get; set; }


	protected override void OnInitialized()
	{
		TeachingSkills = jsonService.ReadTeachingSkillsFromJson();
		DevelopmentSkills = jsonService.ReadDevelopmentSkillsFromJson();
	}

	private async void CreateSkill()
	{
		if (SelectedSkillType == "Teaching")
		{
			await skillService.CreateTeachingSkill(Skill);
			await ChangeState.InvokeAsync();
		}
		else if (SelectedSkillType == "Development")
		{
			await skillService.CreateDevelopmentSkill(Skill);
			await ChangeState.InvokeAsync();
		}
	}

	private void SetSkillType(ChangeEventArgs args)
	{
		SelectedSkillType = args.Value?.ToString();
		Skill.SkillType = SelectedSkillType;
	}
}
