@inject EducationService educationService
@rendermode InteractiveServer

<EditForm Model="@educationDTO" OnValidSubmit="EditEducationn">
	
	<input type="text" class="form-control" id="InstitutionName" placeholder="Enter Institution Name" @bind-value="@educationDTO.InstituteName">
	<input type="text" class="form-control" id="Degree" placeholder="Enter Degree" @bind-value="@educationDTO.Degree">
	<input type="text" class="form-control" id="FieldOfStudy" placeholder="Enter Field Of Study" @bind-value="@educationDTO.FieldOfStudy">
	<input type="text" class="form-control" id="StartDate" placeholder="Enter Start Date" @bind-value="@educationDTO.StartDate">
	<input type="text" class="form-control" id="EndDate" placeholder="Enter End Date" @bind-value="@educationDTO.EndDate">
	<input type="text" class="form-control" id="Grade" placeholder="Enter Grade" @bind-value="@educationDTO.Range">
	<button type="submit" class="btn btn-primary">Update</button>

</EditForm>

@code {
    [Parameter] public int id { get; set; }
	[Parameter] public EducationModel educationDTO { get; set; } = new EducationModel();
	[Parameter] public EventCallback ChangeState { get; set; }
   
	private async Task EditEducationn()
	{
		await educationService.UpdateEducation(educationDTO.EducationID, educationDTO);
		await ChangeState.InvokeAsync();
	}

    
}
